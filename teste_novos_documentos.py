#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Teste dos novos padr√µes regex para CNH, SIAPE, CI e CIN
Demonstra como os padr√µes funcionam e detectam diferentes formatos
"""

import re

def testar_padroes_regex():
    """Testa todos os novos padr√µes regex implementados"""
    
    print("üîç TESTE DOS NOVOS PADR√ïES REGEX PARA ANONIMIZA√á√ÉO\n")
    
    # Padr√µes implementados
    padroes = {
        "CNH": [
            r"\bCNH\s*(?:n¬∫|n\.)?\s*\d{11}\b",  # CNH formatado
            r"\b(?<![\w])\d{11}(?![\w])\b"       # CNH apenas n√∫meros
        ],
        "SIAPE": [
            r"\bSIAPE\s*(?:n¬∫|n\.)?\s*\d{7}\b",  # SIAPE formatado
            r"\b(?<![\w])\d{7}(?![\w])\b"        # SIAPE apenas n√∫meros
        ],
        "CI": [
            r"\bCI\s*(?:n¬∫|n\.)?\s*[\d.]{7,11}-?\d\b",  # CI formatado
            r"\b\d{1,2}\.?\d{3}\.?\d{3}-?\d\b"           # CI padr√£o
        ],
        "CIN": [
            r"\bCIN\s*(?:n¬∫|n\.)?\s*[\d.]{7,11}-?\d\b", # CIN formatado
            r"\b\d{1,2}\.?\d{3}\.?\d{3}-?\d\b"           # CIN padr√£o
        ]
    }
    
    # Textos de teste
    textos_teste = [
        # CNH
        "Minha CNH √© 12345678901",
        "CNH n¬∫ 98765432109",
        "CNH n. 11122233344",
        "Carteira de habilita√ß√£o: 55566677788",
        
        # SIAPE
        "Meu n√∫mero SIAPE √© 1234567",
        "SIAPE n¬∫ 7654321",
        "SIAPE n. 9998888",
        "Funcion√°rio p√∫blico SIAPE 1112222",
        
        # CI
        "Minha CI √© 12345678-9",
        "CI n¬∫ 12.345.678-9",
        "CI n. 98.765.432-1",
        "C√©dula de identidade: 11.222.333-4",
        
        # CIN
        "Minha CIN √© 12345678-9",
        "CIN n¬∫ 12.345.678-9",
        "CIN n. 98.765.432-1",
        "C√©dula de identidade nacional: 11.222.333-4",
        
        # Casos que N√ÉO devem ser detectados
        "Telefone: 12345678901",  # N√£o √© CNH
        "CPF: 1234567",           # N√£o √© SIAPE
        "RG: 12345678-9",         # N√£o √© CI/CIN
        "Processo: 123456789"     # N√£o √© nenhum dos documentos
    ]
    
    # Testa cada padr√£o
    for tipo_documento, regex_list in padroes.items():
        print(f"üìã {tipo_documento}:")
        
        for i, regex in enumerate(regex_list):
            print(f"   Padr√£o {i+1}: {regex}")
            
            for texto in textos_teste:
                matches = re.findall(regex, texto, re.IGNORECASE)
                if matches:
                    print(f"     ‚úÖ '{texto}' ‚Üí Detectado: {matches}")
            
            print()
    
    print("üéØ RESUMO DOS PADR√ïES IMPLEMENTADOS:")
    print("   ‚Ä¢ CNH: Detecta n√∫meros de 11 d√≠gitos com ou sem prefixo 'CNH'")
    print("   ‚Ä¢ SIAPE: Detecta n√∫meros de 7 d√≠gitos com ou sem prefixo 'SIAPE'")
    print("   ‚Ä¢ CI: Detecta formato brasileiro padr√£o (XX.XXX.XXX-X) com ou sem prefixo 'CI'")
    print("   ‚Ä¢ CIN: Detecta formato brasileiro padr√£o (XX.XXX.XXX-X) com ou sem prefixo 'CIN'")
    print("\nüí° Os padr√µes usam context para evitar falsos positivos e scores diferentes para precis√£o")

if __name__ == "__main__":
    testar_padroes_regex()
